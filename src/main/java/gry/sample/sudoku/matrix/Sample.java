package gry.sample.sudoku.matrix;

public enum Sample {
	
	SIMPLIEST(new int[][]{
		new int[]{3,6,5, 9,8,2, 4,7,1},
		new int[]{4,7,1, 3,6,5, 2,8,9},
		new int[]{8,2,9, 7,4,1, 6,3,5},
		
		new int[]{5,1,8, 6,2,3, 7,9,4},
		new int[]{7,4,3, 8,5,9, 1,2,6},
		new int[]{2,9,6, 4,1,7, 3,5,8},
		
		new int[]{6,5,2, 1,3,8, 9,4,7},
		new int[]{9,3,4, 5,7,6, 8,1,2},
		new int[]{1,8,7, 2,9,4, 5,6,0}
	}),
	ALMOSTRESOLVED(new int[][]{
		new int[]{3,6,5, 9,8,2, 4,7,1},
		new int[]{4,7,1, 3,6,5, 2,8,9},
		new int[]{8,2,9, 7,4,1, 6,3,5},
		
		new int[]{5,1,8, 6,2,3, 7,9,4},
		new int[]{7,4,3, 8,5,9, 1,2,6},
		new int[]{2,9,6, 4,1,7, 3,5,8},
		
		new int[]{6,0,2, 1,0,8, 9,4,0},
		new int[]{0,0,4, 5,0,0, 0,1,2},
		new int[]{1,8,0, 0,0,4, 5,0,0}
	}),
	INTERMEDIATE1(new int[][]{
		new int[]{0,0,0, 8,9,0, 0,0,0},
		new int[]{0,6,9, 0,0,4, 3,2,0},
		new int[]{8,2,0, 0,0,5, 4,0,7},
		
		new int[]{3,0,0, 9,0,0, 1,0,2},
		new int[]{0,4,0, 5,0,0, 0,7,0},
		new int[]{0,0,0, 0,0,0, 5,3,0},
		
		new int[]{7,1,0, 0,0,0, 0,0,0},
		new int[]{6,0,0, 0,2,0, 8,0,0},
		new int[]{0,8,4, 0,6,0, 0,1,0}
	}),
	INTERMEDIATE2(new int[][]{
		new int[]{0,5,7 ,8,0,6, 4,0,0},
		new int[]{0,0,0 ,0,0,0, 0,3,8},
		new int[]{1,4,0 ,0,3,7, 9,0,0},
		
		new int[]{0,0,0 ,0,1,2, 0,0,0},
		new int[]{0,0,2 ,4,0,3, 0,0,6},
		new int[]{0,3,0 ,0,6,0, 0,0,7},
		
		new int[]{0,9,5 ,0,0,0, 0,0,0},
		new int[]{7,2,0 ,0,5,0, 0,8,0},
		new int[]{0,0,1 ,0,0,4, 0,9,0}
	}),
	INTERMEDIATE3(new int[][]{
		new int[]{0,4,7, 0,0,8, 0,5,0},
		new int[]{9,8,0, 0,0,0, 0,0,0},
		new int[]{5,0,0, 4,0,0, 0,3,0},
		
		new int[]{4,3,0, 7,9,0, 0,0,1},
		new int[]{0,0,0, 0,0,0, 4,6,0},
		new int[]{0,5,6, 2,0,3, 0,0,7},
		
		new int[]{0,0,0, 1,0,2, 0,0,0},
		new int[]{0,7,0, 0,0,9, 1,0,0},
		new int[]{2,0,0, 8,3,0, 6,0,0},
	}),
	INTERMEDIATE4(new int[][]{
		new int[]{0,0,2, 0,1,0, 0,3,0},
		new int[]{0,0,6, 0,0,2, 0,0,1},
		new int[]{0,0,0, 3,6,0, 2,0,0},

		new int[]{2,0,0, 9,0,1, 0,0,3},
		new int[]{0,1,0, 0,3,0, 5,0,0},
		new int[]{0,8,0, 0,7,0, 0,9,0},

		new int[]{8,0,0, 0,0,9, 0,0,5},
		new int[]{3,0,5, 0,0,6, 0,0,0},
		new int[]{4,0,0, 7,0,0, 6,1,8}
	}),
	DIFFICULT1(new int[][]{
		new int[]{0,0,8, 0,3,0, 0,9,1},
		new int[]{0,2,9, 7,1,0, 6,0,8},
		new int[]{7,1,0, 8,0,0, 3,0,0},
		
		new int[]{0,0,0, 9,0,7, 0,1,5},
		new int[]{9,0,6, 0,5,0, 0,3,0},
		new int[]{0,0,0, 0,0,0, 0,0,0},
		
		new int[]{6,0,0, 5,0,0, 4,7,0},
		new int[]{8,5,0, 0,7,3, 0,0,0},
		new int[]{0,0,0, 0,0,0, 0,0,0},
	}),
	DIFFICULT2(new int[][]{
		new int[]{0,0,0, 0,8,2, 0,7,1},
		new int[]{0,0,0, 0,0,0, 0,0,0},
		new int[]{0,2,9, 7,0,0, 0,0,5},
		
		new int[]{0,0,0, 0,0,0, 0,0,0},
		new int[]{7,4,0, 8,5,0, 0,0,0},
		new int[]{0,9,0, 0,0,7, 3,0,8},
		
		new int[]{6,0,2, 1,0,8, 9,4,0},
		new int[]{0,0,4, 5,0,0, 0,1,2},
		new int[]{1,8,0, 0,0,4, 5,0,0}
	}),
	EMPTY(new int[][]{
		new int[]{0,0,0, 0,0,0, 0,0,0},
		new int[]{0,0,0, 0,0,0, 0,0,0},
		new int[]{0,0,0, 0,0,0, 0,0,0},
		
		new int[]{0,0,0, 0,0,0, 0,0,0},
		new int[]{0,0,0, 0,0,0, 0,0,0},
		new int[]{0,0,0, 0,0,0, 0,0,0},
		
		new int[]{0,0,0, 0,0,0, 0,0,0},
		new int[]{0,0,0, 0,0,0, 0,0,0},
		new int[]{0,0,0, 0,0,0, 0,0,0},
	});
	
	public int[][] getMatrix() {
		return this.matrix;
	}
	
	private int[][] matrix;
	
	private Sample(int[][] matrix) {
		this.matrix = matrix;
	}
}
